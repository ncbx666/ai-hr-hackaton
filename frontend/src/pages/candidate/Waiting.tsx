import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import './Waiting.css';

const Waiting: React.FC = () => {
  const { sessionId } = useParams<{ sessionId: string }>();
  const navigate = useNavigate();
  const [isReady, setIsReady] = useState(false);
  const [isConnecting, setIsConnecting] = useState(false);
  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');

  useEffect(() => {
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
    const checkSystemReady = async () => {
      try {
        await new Promise(resolve => setTimeout(resolve, 2000));
        setIsReady(true);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã');
      }
    };

    checkSystemReady();
  }, []);

  const handleStartInterview = async () => {
    setIsConnecting(true);
    setConnectionStatus('connecting');

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      setConnectionStatus('connected');
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
      setTimeout(() => {
        navigate(`/candidate/${sessionId}/interview`);
      }, 1000);
      
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π');
      setIsConnecting(false);
      setConnectionStatus('disconnected');
    }
  };

  const getConnectionMessage = () => {
    switch (connectionStatus) {
      case 'connecting':
        return '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º...';
      case 'connected':
        return '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é...';
      default:
        return '';
    }
  };

  return (
    <div className="waiting-page">
      <div className="waiting-container">
        <div className="header">
          <h1>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é</h1>
          <p>–ú—ã –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –≤–∞—à–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ</p>
        </div>

        <div className="status-section">
          <div className="system-checks">
            <h3>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã:</h3>
            <div className="check-item">
              <span className={`check-icon ${isReady ? 'success' : 'loading'}`}>
                {isReady ? '‚úì' : '‚è≥'}
              </span>
              <span>AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</span>
            </div>
            <div className="check-item">
              <span className="check-icon success">‚úì</span>
              <span>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</span>
            </div>
            <div className="check-item">
              <span className="check-icon success">‚úì</span>
              <span>–°–∏—Å—Ç–µ–º–∞ —Å–∫–æ—Ä–∏–Ω–≥–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞</span>
            </div>
          </div>

          {connectionStatus !== 'disconnected' && (
            <div className="connection-status">
              <div className="connection-message">
                {getConnectionMessage()}
              </div>
              <div className="connection-progress">
                <div className="progress-bar">
                  <div className={`progress-fill ${connectionStatus}`}></div>
                </div>
              </div>
            </div>
          )}
        </div>

        <div className="instructions-section">
          <h3>–ß—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ:</h3>
          <div className="instruction-steps">
            <div className="step">
              <div className="step-number">1</div>
              <div className="step-content">
                <h4>–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞</h4>
                <p>AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å –∏ –∑–∞–¥–∞–¥—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å</p>
              </div>
            </div>
            <div className="step">
              <div className="step-number">2</div>
              <div className="step-content">
                <h4>–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã</h4>
                <p>–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–º –∏–ª–∏ –ø–µ—á–∞—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–º</p>
              </div>
            </div>
            <div className="step">
              <div className="step-number">3</div>
              <div className="step-content">
                <h4>–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ</h4>
                <p>–ü–æ—Å–ª–µ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∂–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>
              </div>
            </div>
          </div>
        </div>

        <div className="tips-section">
          <h3>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:</h3>
          <ul className="tips-list">
            <li>üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö</li>
            <li>üí¨ –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É –≥–æ–ª–æ—Å–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</li>
            <li>üìñ –ü—Ä–∏–≤–æ–¥–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞</li>
            <li>‚è±Ô∏è –û–±—ã—á–Ω–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç—Å—è 15-20 –º–∏–Ω—É—Ç</li>
          </ul>
        </div>

        <div className="ready-section">
          <p className="ready-question">
            {isReady ? '–í—Å—ë –≥–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ.' : '–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...'}
          </p>
          
          <button 
            onClick={handleStartInterview}
            className="start-interview-btn"
            disabled={!isReady || isConnecting}
          >
            {isConnecting ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...' : '–Ø –≥–æ—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞–µ–º!'}
          </button>
        </div>

        <div className="backend-info">
          <p>üîß –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç Frontend —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Backend.</p>
        </div>
      </div>
    </div>
  );
};

export default Waiting;
