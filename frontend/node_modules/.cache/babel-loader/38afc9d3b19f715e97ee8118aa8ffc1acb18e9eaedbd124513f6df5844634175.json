{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79046\\\\Desktop\\\\ai-hr-hackaton\\\\ai-hr-hackaton\\\\frontend\\\\src\\\\pages\\\\candidate\\\\Interview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Interview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Interview = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [inputMode, setInputMode] = useState('text');\n  const [interviewStep, setInterviewStep] = useState(0);\n  const messagesEndRef = useRef(null);\n  const totalSteps = 5; // Общее количество вопросов\n\n  useEffect(() => {\n    // Инициализация собеседования\n    startInterview();\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Автоскролл к последнему сообщению\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const startInterview = async () => {\n    // Приветственное сообщение от AI\n    const welcomeMessage = {\n      id: Date.now().toString(),\n      type: 'ai',\n      content: 'Здравствуйте! Меня зовут AI-ассистент, и я проведу с вами собеседование. Давайте начнем с небольшого рассказа о себе. Расскажите о своем опыте работы и ключевых навыках.',\n      timestamp: new Date()\n    };\n    setMessages([welcomeMessage]);\n    setInterviewStep(1);\n  };\n  const sendMessage = async (content, isVoice = false) => {\n    if (!content.trim()) return;\n\n    // Добавляем сообщение пользователя\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: content.trim(),\n      timestamp: new Date(),\n      isVoice\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setCurrentMessage('');\n    setIsProcessing(true);\n    try {\n      // Имитация обработки ответа и генерации следующего вопроса\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      const nextQuestion = getNextQuestion(interviewStep);\n      if (nextQuestion) {\n        const aiMessage = {\n          id: (Date.now() + 1).toString(),\n          type: 'ai',\n          content: nextQuestion,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMessage]);\n        setInterviewStep(prev => prev + 1);\n      } else {\n        // Собеседование завершено\n        const completionMessage = {\n          id: (Date.now() + 1).toString(),\n          type: 'ai',\n          content: 'Спасибо за ваши ответы! Собеседование завершено. Мы обработаем результаты и свяжемся с вами в ближайшее время.',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, completionMessage]);\n\n        // Переход к завершению через 3 секунды\n        setTimeout(() => {\n          navigate(`/candidate/${sessionId}/completion`);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error('Ошибка при обработке сообщения:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const getNextQuestion = step => {\n    const questions = ['',\n    // step 0 - уже задан приветственный вопрос\n    'Расскажите о самом сложном проекте, над которым вы работали. Какие технологии использовали и какие проблемы решали?', 'Опишите ситуацию, когда вам пришлось работать в команде над срочной задачей. Как вы организовали работу?', 'Как вы обычно изучаете новые технологии? Приведите пример последней технологии, которую освоили.', 'Почему вы хотите работать именно у нас? Что вас привлекает в данной позиции?'];\n    return step < questions.length ? questions[step] : null;\n  };\n  const handleTextSubmit = e => {\n    e.preventDefault();\n    sendMessage(currentMessage, false);\n  };\n  const startVoiceRecording = async () => {\n    setIsRecording(true);\n    // Здесь будет реальная интеграция с Web Speech API\n\n    // Имитация записи голоса\n    setTimeout(() => {\n      setIsRecording(false);\n      const mockVoiceText = \"Это пример голосового ответа, который был распознан системой\";\n      sendMessage(mockVoiceText, true);\n    }, 3000);\n  };\n  const stopVoiceRecording = () => {\n    setIsRecording(false);\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \", interviewStep, \" \\u0438\\u0437 \", totalSteps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${interviewStep / totalSteps * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-area\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), message.isVoice && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"voice-indicator\",\n                children: \"\\uD83C\\uDFA4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-mode-switcher\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-btn ${inputMode === 'text' ? 'active' : ''}`,\n            onClick: () => setInputMode('text'),\n            disabled: isProcessing,\n            children: \"\\u270F\\uFE0F \\u0422\\u0435\\u043A\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-btn ${inputMode === 'voice' ? 'active' : ''}`,\n            onClick: () => setInputMode('voice'),\n            disabled: isProcessing,\n            children: \"\\uD83C\\uDFA4 \\u0413\\u043E\\u043B\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), inputMode === 'text' ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTextSubmit,\n          className: \"text-input-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: currentMessage,\n              onChange: e => setCurrentMessage(e.target.value),\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442...\",\n              className: \"message-input\",\n              disabled: isProcessing,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"send-btn\",\n              disabled: !currentMessage.trim() || isProcessing,\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `voice-btn ${isRecording ? 'recording' : ''}`,\n            onClick: isRecording ? stopVoiceRecording : startVoiceRecording,\n            disabled: isProcessing,\n            children: isRecording ? '⏹️ Остановить запись' : '🎤 Начать запись'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"recording-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backend-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDD27 \\u0421\\u0430\\u043C\\u0430\\u044F \\u0441\\u043B\\u043E\\u0436\\u043D\\u0430\\u044F \\u0447\\u0430\\u0441\\u0442\\u044C \\u0434\\u043B\\u044F Backend: Real-time \\u0446\\u0438\\u043A\\u043B (Google S2T \\u2192 Gemini (ML-2) \\u2192 Google TTS).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Interview, \"25bDTwpz2TCT+PRMDzVS9/WVkpM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Interview;\nexport default Interview;\nvar _c;\n$RefreshReg$(_c, \"Interview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","jsxDEV","_jsxDEV","Interview","_s","sessionId","navigate","messages","setMessages","currentMessage","setCurrentMessage","isRecording","setIsRecording","isProcessing","setIsProcessing","inputMode","setInputMode","interviewStep","setInterviewStep","messagesEndRef","totalSteps","startInterview","_messagesEndRef$curre","current","scrollIntoView","behavior","welcomeMessage","id","Date","now","toString","type","content","timestamp","sendMessage","isVoice","trim","userMessage","prev","Promise","resolve","setTimeout","nextQuestion","getNextQuestion","aiMessage","completionMessage","error","console","step","questions","length","handleTextSubmit","e","preventDefault","startVoiceRecording","mockVoiceText","stopVoiceRecording","formatTime","date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","message","ref","onClick","disabled","onSubmit","value","onChange","target","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/79046/Desktop/ai-hr-hackaton/ai-hr-hackaton/frontend/src/pages/candidate/Interview.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './Interview.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  type: 'ai' | 'user';\r\n  content: string;\r\n  timestamp: Date;\r\n  isVoice?: boolean;\r\n}\r\n\r\nconst Interview: React.FC = () => {\r\n  const { sessionId } = useParams<{ sessionId: string }>();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [inputMode, setInputMode] = useState<'text' | 'voice'>('text');\r\n  const [interviewStep, setInterviewStep] = useState(0);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const totalSteps = 5; // Общее количество вопросов\r\n\r\n  useEffect(() => {\r\n    // Инициализация собеседования\r\n    startInterview();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Автоскролл к последнему сообщению\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const startInterview = async () => {\r\n    // Приветственное сообщение от AI\r\n    const welcomeMessage: Message = {\r\n      id: Date.now().toString(),\r\n      type: 'ai',\r\n      content: 'Здравствуйте! Меня зовут AI-ассистент, и я проведу с вами собеседование. Давайте начнем с небольшого рассказа о себе. Расскажите о своем опыте работы и ключевых навыках.',\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages([welcomeMessage]);\r\n    setInterviewStep(1);\r\n  };\r\n\r\n  const sendMessage = async (content: string, isVoice: boolean = false) => {\r\n    if (!content.trim()) return;\r\n\r\n    // Добавляем сообщение пользователя\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      content: content.trim(),\r\n      timestamp: new Date(),\r\n      isVoice\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setCurrentMessage('');\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      // Имитация обработки ответа и генерации следующего вопроса\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n      const nextQuestion = getNextQuestion(interviewStep);\r\n      \r\n      if (nextQuestion) {\r\n        const aiMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'ai',\r\n          content: nextQuestion,\r\n          timestamp: new Date()\r\n        };\r\n        \r\n        setMessages(prev => [...prev, aiMessage]);\r\n        setInterviewStep(prev => prev + 1);\r\n      } else {\r\n        // Собеседование завершено\r\n        const completionMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'ai',\r\n          content: 'Спасибо за ваши ответы! Собеседование завершено. Мы обработаем результаты и свяжемся с вами в ближайшее время.',\r\n          timestamp: new Date()\r\n        };\r\n        \r\n        setMessages(prev => [...prev, completionMessage]);\r\n        \r\n        // Переход к завершению через 3 секунды\r\n        setTimeout(() => {\r\n          navigate(`/candidate/${sessionId}/completion`);\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обработке сообщения:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const getNextQuestion = (step: number): string | null => {\r\n    const questions = [\r\n      '', // step 0 - уже задан приветственный вопрос\r\n      'Расскажите о самом сложном проекте, над которым вы работали. Какие технологии использовали и какие проблемы решали?',\r\n      'Опишите ситуацию, когда вам пришлось работать в команде над срочной задачей. Как вы организовали работу?',\r\n      'Как вы обычно изучаете новые технологии? Приведите пример последней технологии, которую освоили.',\r\n      'Почему вы хотите работать именно у нас? Что вас привлекает в данной позиции?',\r\n    ];\r\n\r\n    return step < questions.length ? questions[step] : null;\r\n  };\r\n\r\n  const handleTextSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    sendMessage(currentMessage, false);\r\n  };\r\n\r\n  const startVoiceRecording = async () => {\r\n    setIsRecording(true);\r\n    // Здесь будет реальная интеграция с Web Speech API\r\n    \r\n    // Имитация записи голоса\r\n    setTimeout(() => {\r\n      setIsRecording(false);\r\n      const mockVoiceText = \"Это пример голосового ответа, который был распознан системой\";\r\n      sendMessage(mockVoiceText, true);\r\n    }, 3000);\r\n  };\r\n\r\n  const stopVoiceRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString('ru-RU', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"interview-page\">\r\n      <div className=\"interview-header\">\r\n        <h1>Собеседование</h1>\r\n        <div className=\"progress-info\">\r\n          <span>Вопрос {interviewStep} из {totalSteps}</span>\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{ width: `${(interviewStep / totalSteps) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        <div className=\"messages-area\">\r\n          {messages.map((message) => (\r\n            <div \r\n              key={message.id} \r\n              className={`message ${message.type}`}\r\n            >\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\">{message.content}</div>\r\n                <div className=\"message-meta\">\r\n                  <span className=\"message-time\">{formatTime(message.timestamp)}</span>\r\n                  {message.isVoice && <span className=\"voice-indicator\">🎤</span>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isProcessing && (\r\n            <div className=\"message ai\">\r\n              <div className=\"message-content\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"input-area\">\r\n          <div className=\"input-mode-switcher\">\r\n            <button \r\n              className={`mode-btn ${inputMode === 'text' ? 'active' : ''}`}\r\n              onClick={() => setInputMode('text')}\r\n              disabled={isProcessing}\r\n            >\r\n              ✏️ Текст\r\n            </button>\r\n            <button \r\n              className={`mode-btn ${inputMode === 'voice' ? 'active' : ''}`}\r\n              onClick={() => setInputMode('voice')}\r\n              disabled={isProcessing}\r\n            >\r\n              🎤 Голос\r\n            </button>\r\n          </div>\r\n\r\n          {inputMode === 'text' ? (\r\n            <form onSubmit={handleTextSubmit} className=\"text-input-form\">\r\n              <div className=\"input-group\">\r\n                <textarea\r\n                  value={currentMessage}\r\n                  onChange={(e) => setCurrentMessage(e.target.value)}\r\n                  placeholder=\"Введите ваш ответ...\"\r\n                  className=\"message-input\"\r\n                  disabled={isProcessing}\r\n                  rows={3}\r\n                />\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"send-btn\"\r\n                  disabled={!currentMessage.trim() || isProcessing}\r\n                >\r\n                  Отправить\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <div className=\"voice-input-area\">\r\n              <button \r\n                className={`voice-btn ${isRecording ? 'recording' : ''}`}\r\n                onClick={isRecording ? stopVoiceRecording : startVoiceRecording}\r\n                disabled={isProcessing}\r\n              >\r\n                {isRecording ? '⏹️ Остановить запись' : '🎤 Начать запись'}\r\n              </button>\r\n              {isRecording && (\r\n                <div className=\"recording-indicator\">\r\n                  <span className=\"recording-dot\"></span>\r\n                  Идет запись...\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"backend-info\">\r\n        <p>🔧 Самая сложная часть для Backend: Real-time цикл (Google S2T → Gemini (ML-2) → Google TTS).</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}