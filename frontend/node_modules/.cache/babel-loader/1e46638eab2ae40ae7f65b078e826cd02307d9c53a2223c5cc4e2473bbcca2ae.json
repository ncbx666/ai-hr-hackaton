{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79046\\\\Desktop\\\\ai-hr-hackaton\\\\ai-hr-hackaton\\\\frontend\\\\src\\\\pages\\\\candidate\\\\Interview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Interview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Interview = () => {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const [ws, setWs] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [currentTranscript, setCurrentTranscript] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  // WebSocket подключение\n  useEffect(() => {\n    if (!sessionId) return;\n    const websocket = new WebSocket(`ws://localhost:8000/ws/interview/${sessionId}`);\n    websocket.onopen = () => {\n      console.log('[WebSocket] Подключение установлено');\n      setIsConnected(true);\n    };\n    websocket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      console.log('[WebSocket] Получено:', message);\n      switch (message.type) {\n        case 'welcome':\n          setMessages(prev => [...prev, message]);\n          break;\n        case 'transcript':\n          if (message.is_final) {\n            setCurrentTranscript('');\n            setMessages(prev => [...prev, message]);\n          } else {\n            setCurrentTranscript(message.text || '');\n          }\n          break;\n        case 'question':\n          setMessages(prev => [...prev, message]);\n          break;\n        case 'audio_response':\n          // Воспроизводим аудио ответ\n          playAudioResponse(message.audio_data);\n          break;\n        case 'interview_ended':\n          setMessages(prev => [...prev, message]);\n          setIsRecording(false);\n          break;\n        default:\n          setMessages(prev => [...prev, message]);\n      }\n    };\n    websocket.onclose = () => {\n      console.log('[WebSocket] Соединение закрыто');\n      setIsConnected(false);\n    };\n    websocket.onerror = error => {\n      console.error('[WebSocket] Ошибка:', error);\n    };\n    setWs(websocket);\n    return () => {\n      websocket.close();\n    };\n  }, [sessionId]);\n\n  // Запуск записи аудио\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n\n          // Отправляем аудио чанк через WebSocket (заглушка)\n          if (ws && ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({\n              type: 'audio_chunk',\n              data: `audio_chunk_${audioChunksRef.current.length}`\n            }));\n          }\n        }\n      };\n      mediaRecorder.onstop = () => {\n        // Симулируем финальный транскрипт\n        const finalText = `Тестовый текст ${Date.now()}`;\n        if (ws && ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify({\n            type: 'final_transcript',\n            text: finalText\n          }));\n        }\n\n        // Очищаем аудио чанки\n        audioChunksRef.current = [];\n\n        // Останавливаем все треки\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start(100); // Записываем чанки каждые 100мс\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Ошибка доступа к микрофону:', error);\n      alert('Не удалось получить доступ к микрофону');\n    }\n  };\n\n  // Остановка записи\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  // Завершение интервью\n  const endInterview = () => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify({\n        type: 'end_interview'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0432\\u044C\\u044E - \\u0421\\u0435\\u0441\\u0441\\u0438\\u044F \", sessionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", isConnected ? '🟢 Подключено' : '🔴 Отключено']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-list\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message message-${msg.type}`,\n            children: [msg.type === 'welcome' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0421\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 22\n              }, this), \" \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), msg.type === 'transcript' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0412\\u0430\\u0448 \\u043E\\u0442\\u0432\\u0435\\u0442:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 22\n              }, this), \" \", msg.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), msg.type === 'question' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441 \", msg.question_number, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 22\n              }, this), \" \", msg.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), msg.type === 'interview_ended' && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0421\\u0438\\u0441\\u0442\\u0435\\u043C\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 22\n              }, this), \" \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), currentTranscript && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-transcript\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0433\\u043E\\u0432\\u043E\\u0440\\u0438\\u0442\\u0435:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 18\n            }, this), \" \", currentTranscript]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-controls\",\n          children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startRecording,\n            disabled: !isConnected,\n            className: \"record-button\",\n            children: \"\\uD83C\\uDFA4 \\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopRecording,\n            className: \"stop-button\",\n            children: \"\\u23F9\\uFE0F \\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interview-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: endInterview,\n            disabled: !isConnected,\n            className: \"end-button\",\n            children: \"\\u274C \\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0438\\u043D\\u0442\\u0435\\u0440\\u0432\\u044C\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Interview, \"3xHV6h2vDd5gLomiSckNDN0Tpjo=\", false, function () {\n  return [useParams];\n});\n_c = Interview;\nexport default Interview;\nvar _c;\n$RefreshReg$(_c, \"Interview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","jsxDEV","_jsxDEV","Interview","_s","sessionId","ws","setWs","isConnected","setIsConnected","isRecording","setIsRecording","messages","setMessages","currentTranscript","setCurrentTranscript","mediaRecorderRef","audioChunksRef","websocket","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","type","prev","is_final","text","playAudioResponse","audio_data","onclose","onerror","error","close","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","size","current","push","readyState","OPEN","send","stringify","length","onstop","finalText","Date","now","getTracks","forEach","track","stop","start","alert","stopRecording","state","endInterview","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","question_number","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/79046/Desktop/ai-hr-hackaton/ai-hr-hackaton/frontend/src/pages/candidate/Interview.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Interview.css';\r\n\r\ninterface Message {\r\n  type: 'welcome' | 'transcript' | 'question' | 'interview_ended';\r\n  text?: string;\r\n  message?: string;\r\n  is_final?: boolean;\r\n  question_number?: number;\r\n}\r\n\r\nconst Interview: React.FC = () => {\r\n  const { sessionId } = useParams<{ sessionId: string }>();\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [currentTranscript, setCurrentTranscript] = useState('');\r\n  \r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n\r\n  // WebSocket подключение\r\n  useEffect(() => {\r\n    if (!sessionId) return;\r\n\r\n    const websocket = new WebSocket(`ws://localhost:8000/ws/interview/${sessionId}`);\r\n    \r\n    websocket.onopen = () => {\r\n      console.log('[WebSocket] Подключение установлено');\r\n      setIsConnected(true);\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const message: Message = JSON.parse(event.data);\r\n      console.log('[WebSocket] Получено:', message);\r\n      \r\n      switch (message.type) {\r\n        case 'welcome':\r\n          setMessages(prev => [...prev, message]);\r\n          break;\r\n          \r\n        case 'transcript':\r\n          if (message.is_final) {\r\n            setCurrentTranscript('');\r\n            setMessages(prev => [...prev, message]);\r\n          } else {\r\n            setCurrentTranscript(message.text || '');\r\n          }\r\n          break;\r\n          \r\n        case 'question':\r\n          setMessages(prev => [...prev, message]);\r\n          break;\r\n          \r\n        case 'audio_response':\r\n          // Воспроизводим аудио ответ\r\n          playAudioResponse((message as any).audio_data);\r\n          break;\r\n          \r\n        case 'interview_ended':\r\n          setMessages(prev => [...prev, message]);\r\n          setIsRecording(false);\r\n          break;\r\n          \r\n        default:\r\n          setMessages(prev => [...prev, message]);\r\n      }\r\n    };\r\n\r\n    websocket.onclose = () => {\r\n      console.log('[WebSocket] Соединение закрыто');\r\n      setIsConnected(false);\r\n    };\r\n\r\n    websocket.onerror = (error) => {\r\n      console.error('[WebSocket] Ошибка:', error);\r\n    };\r\n\r\n    setWs(websocket);\r\n\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, [sessionId]);\r\n\r\n  // Запуск записи аудио\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      \r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          audioChunksRef.current.push(event.data);\r\n          \r\n          // Отправляем аудио чанк через WebSocket (заглушка)\r\n          if (ws && ws.readyState === WebSocket.OPEN) {\r\n            ws.send(JSON.stringify({\r\n              type: 'audio_chunk',\r\n              data: `audio_chunk_${audioChunksRef.current.length}`\r\n            }));\r\n          }\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = () => {\r\n        // Симулируем финальный транскрипт\r\n        const finalText = `Тестовый текст ${Date.now()}`;\r\n        if (ws && ws.readyState === WebSocket.OPEN) {\r\n          ws.send(JSON.stringify({\r\n            type: 'final_transcript',\r\n            text: finalText\r\n          }));\r\n        }\r\n        \r\n        // Очищаем аудио чанки\r\n        audioChunksRef.current = [];\r\n        \r\n        // Останавливаем все треки\r\n        stream.getTracks().forEach(track => track.stop());\r\n      };\r\n\r\n      mediaRecorderRef.current = mediaRecorder;\r\n      mediaRecorder.start(100); // Записываем чанки каждые 100мс\r\n      setIsRecording(true);\r\n      \r\n    } catch (error) {\r\n      console.error('Ошибка доступа к микрофону:', error);\r\n      alert('Не удалось получить доступ к микрофону');\r\n    }\r\n  };\r\n\r\n  // Остановка записи\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  // Завершение интервью\r\n  const endInterview = () => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(JSON.stringify({ type: 'end_interview' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"interview-container\">\r\n      <div className=\"interview-header\">\r\n        <h1>Интервью - Сессия {sessionId}</h1>\r\n        <div className=\"connection-status\">\r\n          Статус: {isConnected ? '🟢 Подключено' : '🔴 Отключено'}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"interview-content\">\r\n        <div className=\"messages-section\">\r\n          <h3>История сообщений:</h3>\r\n          <div className=\"messages-list\">\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`message message-${msg.type}`}>\r\n                {msg.type === 'welcome' && (\r\n                  <p><strong>Система:</strong> {msg.message}</p>\r\n                )}\r\n                {msg.type === 'transcript' && (\r\n                  <p><strong>Ваш ответ:</strong> {msg.text}</p>\r\n                )}\r\n                {msg.type === 'question' && (\r\n                  <p><strong>Вопрос {msg.question_number}:</strong> {msg.text}</p>\r\n                )}\r\n                {msg.type === 'interview_ended' && (\r\n                  <p><strong>Система:</strong> {msg.message}</p>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {currentTranscript && (\r\n            <div className=\"current-transcript\">\r\n              <p><strong>Сейчас говорите:</strong> {currentTranscript}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"controls-section\">\r\n          <div className=\"recording-controls\">\r\n            {!isRecording ? (\r\n              <button \r\n                onClick={startRecording} \r\n                disabled={!isConnected}\r\n                className=\"record-button\"\r\n              >\r\n                🎤 Начать запись\r\n              </button>\r\n            ) : (\r\n              <button \r\n                onClick={stopRecording}\r\n                className=\"stop-button\"\r\n              >\r\n                ⏹️ Остановить запись\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"interview-controls\">\r\n            <button \r\n              onClick={endInterview}\r\n              disabled={!isConnected}\r\n              className=\"end-button\"\r\n            >\r\n              ❌ Завершить интервью\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}