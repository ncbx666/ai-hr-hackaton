"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Google Sheets
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ API –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(__file__))

from google_sheets_monitor import google_sheets_monitor, OperationType, OperationStatus
from google_sheets_service import google_sheets_service

async def test_monitoring_system():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    """
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Google Sheets")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é (—É—Å–ø–µ—à–Ω–æ)
    print("\nüìä –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é")
    try:
        interview_data = {
            'id': 'test-interview-001',
            'position': 'Python Developer',
            'job_description': 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è AI-HR —Å–∏—Å—Ç–µ–º—ã',
            'created_at': datetime.now().isoformat()
        }
        
        result = await google_sheets_service.create_interview_sheet(
            interview_data=interview_data
        )
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (—É—Å–ø–µ—à–Ω–æ)
    print("\nüìä –¢–µ—Å—Ç 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    try:
        results_data = {
            'candidate_name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            'final_score_percent': 85,
            'verdict': '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ –Ω–∞–π–º—É',
            'breakdown': {
                'hard_skills': {'score_percent': 90},
                'experience': {'score_percent': 80},
                'soft_skills': {'score_percent': 85}
            }
        }
        
        result = await google_sheets_service.update_interview_results(
            interview_id='test-interview-001',
            results_data=results_data
        )
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ URL (—É—Å–ø–µ—à–Ω–æ)
    print("\nüìä –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ URL")
    try:
        url = await google_sheets_service.get_interview_sheet_url('test-interview-001')
        print(f"‚úÖ URL: {url}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–∫–∏
    print("\nüìä –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–∫–∏")
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        await google_sheets_monitor.log_operation(
            operation_type=OperationType.CREATE_SHEET,
            interview_id='error-test-001',
            status=OperationStatus.ERROR,
            duration_ms=1500,
            details={'test': 'error simulation'},
            error_message="–°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            stack_trace="Test stack trace"
        )
        print("‚úÖ –û—à–∏–±–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—à–∏–±–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –¢–µ—Å—Ç 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    try:
        stats = await google_sheets_monitor.get_statistics()
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        for key, value in stats.items():
            print(f"   {key}: {value}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
    print("\nüìä –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤")
    try:
        logs = await google_sheets_monitor.get_recent_logs(limit=10)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ª–æ–≥–æ–≤: {len(logs)}")
        
        for i, log in enumerate(logs[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"   –õ–æ–≥ #{i}:")
            print(f"     –í—Ä–µ–º—è: {log.timestamp}")
            print(f"     –û–ø–µ—Ä–∞—Ü–∏—è: {log.operation_type.value}")
            print(f"     –°—Ç–∞—Ç—É—Å: {log.status.value}")
            print(f"     –ò–Ω—Ç–µ—Ä–≤—å—é: {log.interview_id}")
            print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {log.duration_ms}ms")
            if log.error_message:
                print(f"     –û—à–∏–±–∫–∞: {log.error_message}")
            print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")
    
    print("=" * 60)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

async def test_performance():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    """
    print("\n‚ö° –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("-" * 40)
    
    import time
    
    start_time = time.time()
    
    # –°–æ–∑–¥–∞–µ–º –º–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    tasks = []
    for i in range(100):
        task = google_sheets_monitor.log_operation(
            operation_type=OperationType.CREATE_SHEET,
            interview_id=f'perf-test-{i:03d}',
            status=OperationStatus.SUCCESS,
            duration_ms=50 + (i % 500),  # –í–∞—Ä—å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç 50 –¥–æ 550ms
            details={'test_iteration': i, 'performance_test': True}
        )
        tasks.append(task)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    await asyncio.gather(*tasks)
    
    end_time = time.time()
    total_time = end_time - start_time
    
    print(f"‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ 100 –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {total_time:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"üìä –°–∫–æ—Ä–æ—Å—Ç—å: {100/total_time:.2f} –æ–ø–µ—Ä–∞—Ü–∏–π/—Å–µ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = await google_sheets_monitor.get_statistics()
    print(f"üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞:")
    print(f"   –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: {stats.get('total_operations', 0)}")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {stats.get('successful_operations', 0)}")
    print(f"   –° –æ—à–∏–±–∫–∞–º–∏: {stats.get('error_operations', 0)}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Google Sheets")
    
    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
        asyncio.run(test_monitoring_system())
        
        # –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        asyncio.run(test_performance())
        
        print("\nüéØ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
